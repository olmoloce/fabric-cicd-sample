name: CI Workflow

on:
  workflow_dispatch:

env:
  STORAGE_ACCOUNT: ${{ vars.CODE_STORAGE_ACCOUNT }}
  FABRIC_DEPLOYMENT_HUB_URL: ${{ vars.FABRIC_DEPLOYMENT_HUB_URL }}
  WORKSPACE_IDS: ${{ vars.WORKSPACE_IDS }}

jobs:
  prepare:
    runs-on: self-hosted
    outputs:
      container_name: ${{ steps.generate_container.outputs.container_name }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Authenticate with Azure using Managed Identity
        run: |
          az login --identity
        shell: bash

      - name: Generate Container Name
        id: generate_container
        run: |
          GENERATED_CONTAINER=$(cat /proc/sys/kernel/random/uuid)
          echo "::set-output name=container_name::$GENERATED_CONTAINER"
        shell: bash

      - name: Upload repository to shared storage
        run: |
          az storage container create \
            --account-name "${{ env.STORAGE_ACCOUNT }}" \
            --name "${{ steps.generate_container.outputs.container_name }}" \
            --auth-mode login

          az storage blob upload-batch \
            --account-name "${{ env.STORAGE_ACCOUNT }}" \
            --destination "${{ steps.generate_container.outputs.container_name }}" \
            --source "$GITHUB_WORKSPACE" \
            --auth-mode login
        shell: bash

  plan:
    needs: prepare
    runs-on: self-hosted
    steps:
      - name: Call Deployment API (Plan Phase)
        run: |
          curl -X POST "https://${{ env.FABRIC_DEPLOYMENT_HUB_URL }}/api/Planner/tenant-deployment-plan" \
            -H "Content-Type: application/json" \
            -d '{
              "workspaceIds": ["4aca0508-e966-40a7-a2a2-84861b281c83", "3dc6d3ea-f6c5-41c6-b9f7-dbdadccfd76e"],
              "repoContainer": "${{ needs.prepare.outputs.container_name }}",
              "modifiedFolders": ["Notebook 2.Notebook"],
              "savePlan": true
            }'
        shell: bash

  validate:
    needs: plan
    runs-on: self-hosted
    steps:
      - name: Validate Deployment Plan
        run: |
          echo "Validation logic here. Use the plan details from the 'plan' phase if needed."
        shell: bash

  apply:
    needs: validate
    runs-on: self-hosted
    steps:
      - name: Apply Deployment Plan
        run: |
          echo "Apply logic here. Finalize the deployment."
        shell: bash