name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  STORAGE_ACCOUNT: ${{ vars.CODE_STORAGE_ACCOUNT }}
  FABRIC_DEPLOYMENT_HUB_URL: ${{ vars.FABRIC_DEPLOYMENT_HUB_URL }}
  WORKSPACE_IDS: ${{ vars.WORKSPACE_IDS }}

jobs:
  build:
    runs-on: self-hosted

    steps:
      # Step 1: Check out the repository
      - name: Check out the code
        uses: actions/checkout@v4
      # step 1.1: check git is installed
      - name: Check if Git is installed
        run: |
          if command -v git &> /dev/null; then
            echo "Git is installed."
            git --version
          else
            echo "Git is not installed."
            exit 1
          fi
        shell: bash
      # Step 2: Obtain the modified folders list using GitHub API
      - name: Get modified folders
        id: modified_folders
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # Fetch modified folders for pull requests
            echo "Running for pull request..."
            RESPONSE=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
              https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files)
            MODIFIED_FOLDERS=$(echo "$RESPONSE" | jq -r '.[].filename | split("/")[0]' | sort | uniq)
          else
            # Fetch modified folders for push events
            echo "Running for push event..."
            RESPONSE=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
              https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/files)
            MODIFIED_FOLDERS=$(echo "$RESPONSE" | jq -r '.[].filename | split("/")[0]' | sort | uniq)
          fi

          echo "Modified folders detected: $MODIFIED_FOLDERS"
          echo "folders=$MODIFIED_FOLDERS" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash

      # Step 3: Authenticate with Azure using Managed Identity
      - name: Authenticate with Azure
        run: |
          az login --identity

      # Step 4: Upload repository to shared storage
      - name: Upload repository to shared storage
        run: |
          azcopy copy "$GITHUB_WORKSPACE" "https://${{ env.STORAGE_ACCOUNT }}.blob.core.windows.net/$(uuidgen)" --recursive

      # Step 5: Call the deployment API
      - name: Call Deployment API
        run: |
          curl -X POST "https://$FABRIC_DEPLOYMENT_HUB_URL/api/Planner/tenant-deployment-plan" \
            -H "Content-Type: application/json" \
            -d '{
              "workspaceIds": [${{ env.WORKSPACE_IDS }}],
              "repoContainer": "<container_name>",
              "modifiedFolders": ["'$MODIFIED_FOLDERS'"]
            }'